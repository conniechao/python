1. 序列
用于存放多个值得连续内存空间，按一定顺序排列，每个元素都分配一个数字作为索引
序列结果：字符串、列表、元组、字典、集合
字典和集合不支持索引、切片、加、乘

1.1 索引Indexing
序列中元素的编号，支持负数
元素1     元素2 ... 元素n
 0         1        n-1
 -(n-1)  -(n-2)     -1
 
1.2 切片slicing/'slaɪsɪŋ/ 
s[start:end:step]
 
1.3 加adding
s1 + s2
 
1.4 乘法
重复多遍
print(['a','b']*3)
['a', 'b', 'a', 'b', 'a', 'b']

1.5 内置函数
list():序列转为列表
str():序列转为字符串
sum():元素和
sorted():元素排序
reversed():反向元素
enumerate():组合为索引序列，用于for循环

2.列表list
可变序列，任何类型都可以放入列表，元素的类型可以不同，但一般不建议
(1)创建：l1 = ['a', '1', ['str'], ('str')]
        l2 = [1, 5, 3, 4, 2]
        l3 = []

(2)删除：del l1, 不常用，python自带垃圾回收机制，自动回收不用的列表

(3)遍历：
for i in l1:
or
for i,j in enumerate(l1): #带索引
   print (i,j)
0 a
1 1
2 ['str']
3 str

(4)添加元素
列表末尾添加元素：l1.append('b')，比+要快
指定位置添加元素：insert()，效率不高，不推荐
一个列表中全部元素添加到另一个列表中：l1.extend(l2)

(5)修改元素：l1[1] = '2'

(6)删除元素
a. 根据索引删除：del l1[5]
b. 根据元素值删除：l1.remove("a")，最好先判断"a"是否存在
if l1.count("a")>0:
    l1.remove("a")
    
(7)统计
l1.count("a")精确匹配
l1.index("a")精确匹配
sum(l2):l2各元素之和
l2.sorted()




